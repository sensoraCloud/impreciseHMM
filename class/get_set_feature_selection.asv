function [ results ] = get_set_feature_selection( cmd,labels,data,n_fold,setFeatureFileName )
%FEATURE SELECTION find best set of features that maximize accuracy with
%n-fold classification only for SVM (sequential forward selection(SFS))
%OUTPUT results: (also write results file in setFeatureFileName )
% results{1,1}=featuresIndex; (ordered feature SFS selection)
% results{1,2}=festAcc; (accuracy of each step selection)
% results{1,3}=theBestFeatureIndex;  (the best minor accuracy set feature) 
% results{1,4}=theBestCV; (accuracy of the best set feature) 

numFeat=size(data,2);
C=size(data,1);

dTemp=zeros(C,1);
totF=numFeat;
dFdel=data;
dFadd=[];
%featuresIndex=zeros(1,numFeat);
festAcc=zeros(1,numFeat);
theBestCV=-inf;
theBestFeatureIndex=[];
%leave-one-out
if n_fold==0
   cmd = [cmd,' -v ', num2str(numFeat)];        
else
   cmd = [cmd,' -v ', num2str(n_fold)];
end


for i=1:numFeat
    
    disp(num2str(i));
    
    j=1;
    bestcv=-inf;
    
    while j<=totF    
        
        dTemp=[ dFadd dFdel(:,j)];
        
        cv = svmtrain(labels, dTemp , cmd);    
        
        if (cv > bestcv),
            
          bestcv = cv;
          bestF = j;  
          
          featuresIndex(1,i)=j;
          festAcc(1,i)=bestcv;
          
          if bestcv>theBestCV
              
              theBestCV=bestcv;
              theBestFeatureIndex=featuresIndex;
              
              disp(['Best Accuracy: ',num2str(theBestCV),' Feature Index: ', num2str(featuresIndex) ] );
              
          end
          
        end
        
        j=j+1;
    end
    
    dFadd=[ dFadd dFdel(:,bestF)];
    
    if bestF==1
        dFdel=dFdel(:,2:totF);
    else        
        dFdel=[ dFdel(:,1:bestF-1) dFdel(:,bestF+1:totF) ];
    end
    
    totF=totF-1;   
    
    if bestcv==100 
          break;
    end
    
end

results{1,1}=featuresIndex;
results{1,2}=festAcc;
results{1,3}=theBestFeatureIndex;
results{1,4}=theBestCV;

save(setFeatureFileName,'results');

end

